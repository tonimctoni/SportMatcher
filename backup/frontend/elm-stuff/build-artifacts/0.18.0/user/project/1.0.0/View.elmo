var _user$project$View$plugin_filling = function (model) {
	var _p0 = model.selected_plugin;
	if (_p0.ctor === 'Nothing') {
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{ctor: '[]'});
	} else {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('col-md-4'),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'border-left', _1: '.075cm dashed #555555'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						A2(
							_elm_lang$core$List$map,
							function (x) {
								return A2(
									_elm_lang$html$Html$h2,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('text-info'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(x),
										_1: {ctor: '[]'}
									});
							},
							model.plugin_filling)),
					_1: {ctor: '[]'}
				}
			});
	}
};
var _user$project$View$plugin_buttons = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('col-md-2'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin', _1: '.1cm'},
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		},
		A2(
			_elm_lang$core$List$map,
			function (x) {
				return A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$button,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('btn'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$style(
										{
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'margin', _1: '.25cm'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'width', _1: '3cm'},
												_1: {ctor: '[]'}
											}
										}),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onClick(
											_user$project$Model$SelectPlugin(x)),
										_1: {ctor: '[]'}
									}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(x),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					});
			},
			model.plugin_names));
};
var _user$project$View$nav_fill = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('container'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$style(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'margin', _1: '.2cm'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'padding', _1: '.2cm'},
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('row'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _user$project$View$plugin_buttons(model),
					_1: {
						ctor: '::',
						_0: _user$project$View$plugin_filling(model),
						_1: {ctor: '[]'}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$View$nav_bar = function (nav_bar_state) {
	return A2(
		_elm_lang$html$Html$nav,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('navbar navbar-inverse'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('container-fluid'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('navbar-header'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$a,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('navbar-brand'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$style(
											{
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'color', _1: 'purple'},
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$href('javascript:;'),
											_1: {ctor: '[]'}
										}
									}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Sport Matcher'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$ul,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('nav navbar-nav'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$li,
									_elm_lang$core$Native_Utils.eq(nav_bar_state, _user$project$Model$NavReports) ? {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('active'),
										_1: {ctor: '[]'}
									} : {ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$a,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$href('javascript:;'),
												_1: {
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onClick(
														_user$project$Model$SetNavBar(_user$project$Model$NavReports)),
													_1: {ctor: '[]'}
												}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Reports'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$li,
										_elm_lang$core$Native_Utils.eq(nav_bar_state, _user$project$Model$NavFill) ? {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('active'),
											_1: {ctor: '[]'}
										} : {ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$a,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$href('javascript:;'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onClick(
															_user$project$Model$SetNavBar(_user$project$Model$NavFill)),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text('Fill'),
													_1: {ctor: '[]'}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$li,
											_elm_lang$core$Native_Utils.eq(nav_bar_state, _user$project$Model$NavInvites) ? {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('active'),
												_1: {ctor: '[]'}
											} : {ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$a,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$href('javascript:;'),
														_1: {
															ctor: '::',
															_0: _elm_lang$html$Html_Events$onClick(
																_user$project$Model$SetNavBar(_user$project$Model$NavInvites)),
															_1: {ctor: '[]'}
														}
													},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Invite'),
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$ul,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('nav navbar-nav navbar-right'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$li,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$a,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$href('javascript:;'),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html_Events$onClick(_user$project$Model$LogOut),
														_1: {ctor: '[]'}
													}
												},
												{
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$span,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('glyphicon glyphicon-log-out'),
															_1: {ctor: '[]'}
														},
														{ctor: '[]'}),
													_1: {
														ctor: '::',
														_0: _elm_lang$html$Html$text(' Unlogin'),
														_1: {ctor: '[]'}
													}
												}),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$View$onEnter = function (msg) {
	var isEnter = function (code) {
		return _elm_lang$core$Native_Utils.eq(code, 13) ? _elm_lang$core$Json_Decode$succeed(msg) : _elm_lang$core$Json_Decode$fail('not ENTER');
	};
	return A2(
		_elm_lang$html$Html_Events$on,
		'keydown',
		A2(_elm_lang$core$Json_Decode$andThen, isEnter, _elm_lang$html$Html_Events$keyCode));
};
var _user$project$View$log_in = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'position', _1: 'fixed'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'top', _1: '50%'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'left', _1: '50%'},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'transform', _1: 'translate(-50%, -50%)'},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'background-color', _1: 'black'},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'border-color', _1: '#444444'},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'border-style', _1: 'solid'},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'border-width', _1: 'medium'},
												_1: {
													ctor: '::',
													_0: {ctor: '_Tuple2', _0: 'padding-left', _1: '.75cm'},
													_1: {
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'padding-right', _1: '.75cm'},
														_1: {
															ctor: '::',
															_0: {ctor: '_Tuple2', _0: 'padding-bottom', _1: '.75cm'},
															_1: {
																ctor: '::',
																_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
																_1: {ctor: '[]'}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'left'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Login'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$core$Native_Utils.eq(
					_elm_lang$core$String$length(model.error_string),
					0) ? A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					{ctor: '[]'}) : A2(
					_elm_lang$html$Html$h5,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(model.error_string),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('text'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$placeholder('Name'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$Model$SetNick),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$br,
							{ctor: '[]'},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('password'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$placeholder('Password'),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onInput(_user$project$Model$SetPass),
											_1: {
												ctor: '::',
												_0: _user$project$View$onEnter(_user$project$Model$LogIn),
												_1: {ctor: '[]'}
											}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$br,
									{ctor: '[]'},
									{ctor: '[]'}),
								_1: {
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$button,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Events$onClick(_user$project$Model$LogIn),
											_1: {
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$style(
													{
														ctor: '::',
														_0: {ctor: '_Tuple2', _0: 'margin-top', _1: '.5cm'},
														_1: {ctor: '[]'}
													}),
												_1: {ctor: '[]'}
											}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Ok'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}
							}
						}
					}
				}
			}
		});
};
var _user$project$View$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A3(
				_elm_lang$html$Html$node,
				'link',
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$rel('stylesheet'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$href('/bootstrap/css/bootstrap.min.css'),
						_1: {ctor: '[]'}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A3(
					_elm_lang$html$Html$node,
					'style',
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$type_('text/css'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('body{background-image: url(\'/darkness640.jpg\');}'),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: model.logged_in ? A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _user$project$View$nav_bar(model.nav_bar_state),
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Native_Utils.eq(
									_elm_lang$core$String$length(model.error_string),
									0) ? A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{ctor: '[]'}) : A2(
									_elm_lang$html$Html$h5,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(model.error_string),
										_1: {ctor: '[]'}
									}),
								_1: {
									ctor: '::',
									_0: function () {
										var _p1 = model.nav_bar_state;
										switch (_p1.ctor) {
											case 'NavReports':
												return _elm_lang$html$Html$text('asd');
											case 'NavFill':
												return _user$project$View$nav_fill(model);
											default:
												return _elm_lang$html$Html$text('zxc');
										}
									}(),
									_1: {ctor: '[]'}
								}
							}
						}) : _user$project$View$log_in(model),
					_1: {ctor: '[]'}
				}
			}
		});
};
